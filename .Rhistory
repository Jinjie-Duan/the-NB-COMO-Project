mygraph <- graph_from_data_frame( edges, vertices=vertices )
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
theme_void() +
theme(legend.position="FALSE")
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label, size=size)) +
theme_void() +
theme(legend.position="FALSE")
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label)) +
theme_void() +
theme(legend.position="FALSE")
# A common problem is to add labels for only nodes of a certain level. To do so, you need to determine from your hierarchy which node is at which level.
# This can be achieved using the data.tree library:
library(data.tree)
edges=flare$edges
vertices = flare$vertices
tree <- FromDataFrameNetwork(edges)
mylevels=data.frame( name=tree$Get('name'), level=tree$Get("level") )
vertices = vertices %>% left_join(., mylevels, by=c("name"="name"))
# Now we can add label for level1 and 2 only for example:
vertices = vertices %>% mutate(new_label=ifelse(level==2, shortName, NA))
mygraph <- graph_from_data_frame( edges, vertices=vertices )
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label)) +
theme_void() +
theme(legend.position="FALSE")
library(data.tree)
edges=flare$edges
vertices = flare$vertices
tree <- FromDataFrameNetwork(edges)
mylevels=data.frame( name=tree$Get('name'), level=tree$Get("level") )
vertices = vertices %>% left_join(., mylevels, by=c("name"="name"))
# Now we can add label for level1 and 2 only for example:
vertices = vertices %>% mutate(new_label=ifelse(level==1, shortName, NA))
mygraph <- graph_from_data_frame( edges, vertices=vertices )
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label)) +
theme_void() +
theme(legend.position="FALSE")
# A common problem is to add labels for only nodes of a certain level. To do so, you need to determine from your hierarchy which node is at which level.
# This can be achieved using the data.tree library:
library(data.tree)
edges=flare$edges
vertices = flare$vertices
tree <- FromDataFrameNetwork(edges)
mylevels=data.frame( name=tree$Get('name'), level=tree$Get("level") )
vertices = vertices %>% left_join(., mylevels, by=c("name"="name"))
# Now we can add label for level1 and 2 only for example:
vertices = vertices %>% mutate(new_label=ifelse(level==2, shortName, NA))
mygraph <- graph_from_data_frame( edges, vertices=vertices )
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label)) +
theme_void() +
theme(legend.position="FALSE")
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), fill="orange") +
theme_void() +
theme(legend.position="FALSE")
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), fill="green") +
theme_void() +
theme(legend.position="FALSE")
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), fill="green") +
theme_void() +
theme(legend.position="FALSE")
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label)) +
theme_void() +
theme(legend.position="FALSE")
# Libraries
library(ggraph)
library(igraph)
library(tidyverse)
library(viridis)
# We need a data frame giving a hierarchical structure. Let's consider the flare dataset:
edges=flare$edges
vertices = flare$vertices
mygraph <- graph_from_data_frame( edges, vertices=vertices )
# Control the size of each circle: (use the size column of the vertices data frame)
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.2.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label)) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
# A common problem is to add labels for only nodes of a certain level. To do so, you need to determine from your hierarchy which node is at which level.
# This can be achieved using the data.tree library:
library(data.tree)
edges=flare$edges
vertices = flare$vertices
tree <- FromDataFrameNetwork(edges)
mylevels=data.frame( name=tree$Get('name'), level=tree$Get("level") )
vertices = vertices %>% left_join(., mylevels, by=c("name"="name"))
# Now we can add label for level1 and 2 only for example:
vertices = vertices %>% mutate(new_label=ifelse(level==2, shortName, NA))
mygraph <- graph_from_data_frame( edges, vertices=vertices )
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label)) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=5) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
# Libraries
library(ggraph)
library(igraph)
library(tidyverse)
library(viridis)
# We need a data frame giving a hierarchical structure. Let's consider the flare dataset:
edges=flare$edges
vertices = flare$vertices
mygraph <- graph_from_data_frame( edges, vertices=vertices )
# Control the size of each circle: (use the size column of the vertices data frame)
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.1.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.2.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
# A common problem is to add labels for only nodes of a certain level. To do so, you need to determine from your hierarchy which node is at which level.
# This can be achieved using the data.tree library:
library(data.tree)
edges=flare$edges
vertices = flare$vertices
tree <- FromDataFrameNetwork(edges)
mylevels=data.frame( name=tree$Get('name'), level=tree$Get("level") )
vertices = vertices %>% left_join(., mylevels, by=c("name"="name"))
# Now we can add label for level1 and 2 only for example:
vertices = vertices %>% mutate(new_label=ifelse(level==2, shortName, NA))
mygraph <- graph_from_data_frame( edges, vertices=vertices )
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=5) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
# -------
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=5) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE", bg="grey")
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE", plot.bg="grey")
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE", plot.margin = unit(rep(-2,4), "cm"))
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE", plot.margin = unit(rep(-2,4), "cm"))
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE", plot.margin = unit(rep(0,4), "cm"))
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE", plot.margin = unit(rep(0,4), "cm"))
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE", plot.margin = unit(rep(0,4), "cm"))
dev.off()
# ---------------------------------------------------------------------------------------------------------------------------------------------------------
# 313 CIRCLE PACKING BASIC GGRAPH
# Libraries
library(ggraph)
library(igraph)
library(tidyverse)
# We need a data frame giving a hierarchical structure. Let's consider the flare dataset:
edges=flare$edges
# Usually we associate another dataset that give information about each node of the dataset:
vertices = flare$vertices
# Then we have to make a 'graph' object using the igraph library:
mygraph <- graph_from_data_frame( edges, vertices=vertices )
# Make the plot
png("~/Dropbox/R_GG/R_GRAPH/#313_basic_circle_packing1.png", height = 480, width=480)
ggraph(mygraph, layout = 'circlepack') +
geom_node_circle() +
theme_void()
dev.off()
# Note that the most usual way to represent a hierarchy is to do a dendrogram.
# Ggraph is awesome because it allows to quickly jump from one representation to the other:
png("~/Dropbox/R_GG/R_GRAPH/#313_basic_circle_packing2.png", height = 480, width=480)
ggraph(mygraph, layout='dendrogram', circular=TRUE) +
geom_edge_diagonal() +
theme_void() +
theme(legend.position="none")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#313_basic_circle_packing3.png", height = 480, width=480)
ggraph(mygraph, layout='dendrogram', circular=FALSE) +
geom_edge_diagonal() +
theme_void() +
theme(legend.position="none")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#313_basic_circle_packing4.png", height = 480, width=480)
ggraph(mygraph, 'treemap', weight = 'size') +
geom_node_tile(aes(fill = depth), size = 0.25) +
theme_void() +
theme(legend.position="none")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#313_basic_circle_packing5.png", height = 480, width=480)
ggraph(mygraph, 'partition', circular = TRUE) +
geom_node_arc_bar(aes(fill = depth), size = 0.25) +
theme_void() +
theme(legend.position="none")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#313_basic_circle_packing6.png", height = 480, width=480)
ggraph(mygraph) +
geom_edge_link() +
geom_node_point() +
theme_void() +
theme(legend.position="none")
dev.off()
# ---------------------------------------------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------------------------------------------
# 314 CIRCLE PACKING CUSTOM
# Libraries
library(ggraph)
library(igraph)
library(tidyverse)
library(viridis)
# We need a data frame giving a hierarchical structure. Let's consider the flare dataset:
edges=flare$edges
vertices = flare$vertices
mygraph <- graph_from_data_frame( edges, vertices=vertices )
# Control the size of each circle: (use the size column of the vertices data frame)
png("~/Dropbox/R_GG/R_GRAPH/#314_custom_circle_packing1.png", height = 480, width=480)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle() +
theme_void()
dev.off()
# We definitely need color. First option: map color to depth:
png("~/Dropbox/R_GG/R_GRAPH/#314_custom_circle_packing2.png", height = 480, width=480)
p=ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = depth)) +
theme_void() +
theme(legend.position="FALSE")
p
dev.off()
# Adjust color palette:
png("~/Dropbox/R_GG/R_GRAPH/#314_custom_circle_packing3.png", height = 480, width=480)
p + scale_fill_viridis()
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#314_custom_circle_packing4.png", height = 480, width=480)
p + scale_fill_distiller(palette = "RdPu")
dev.off()
# You can do it only if the number of circle is not too high. Thus, let's work on a subset of the data only
edges = flare$edges %>% filter(to %in% from) %>% droplevels()
#edges = edges %>% filter(to %in% from) %>% droplevels()
edges
vertices = flare$vertices %>% filter(name %in% c(edges$from, edges$to)) %>% droplevels()
vertices$size=runif(nrow(vertices))
mygraph <- graph_from_data_frame( edges, vertices=vertices )
png("~/Dropbox/R_GG/R_GRAPH/#314_custom_circle_packing5.png", height = 480, width=480)
ggraph(mygraph, layout = 'circlepack', weight="size" ) +
geom_node_circle(aes(fill = depth)) +
geom_node_text( aes(label=shortName, filter=leaf, fill=depth, size=size)) +
theme_void() +
theme(legend.position="FALSE") +
scale_fill_viridis()
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#314_custom_circle_packing6.png", height = 480, width=480)
ggraph(mygraph, layout = 'circlepack', weight="size" ) +
geom_node_circle(aes(fill = depth)) +
geom_node_label( aes(label=shortName, filter=leaf, size=size)) +
theme_void() +
theme(legend.position="FALSE") +
scale_fill_viridis()
dev.off()
# ---------------------------------------------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------------------------------------------
# 315 CIRCLE PACKING WITHOUT FIRST LEVEL
# Libraries
library(ggraph)
library(igraph)
library(tidyverse)
library(viridis)
# We need a data frame giving a hierarchical structure. Let's consider the flare dataset:
edges=flare$edges
vertices = flare$vertices
mygraph <- graph_from_data_frame( edges, vertices=vertices )
# Control the size of each circle: (use the size column of the vertices data frame)
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.1.png", height = 480, width=480)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.2.png", height = 480, width=480)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = "white", "2" = magma(4)[2], "3" = magma(4)[3], "4"=magma(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "white", "2" = "black", "3" = "black", "4"="black") ) +
theme_void() +
theme(legend.position="FALSE")
dev.off()
# A common problem is to add labels for only nodes of a certain level. To do so, you need to determine from your hierarchy which node is at which level.
# This can be achieved using the data.tree library:
library(data.tree)
edges=flare$edges
vertices = flare$vertices
tree <- FromDataFrameNetwork(edges)
mylevels=data.frame( name=tree$Get('name'), level=tree$Get("level") )
vertices = vertices %>% left_join(., mylevels, by=c("name"="name"))
# Now we can add label for level1 and 2 only for example:
vertices = vertices %>% mutate(new_label=ifelse(level==2, shortName, NA))
mygraph <- graph_from_data_frame( edges, vertices=vertices )
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 480, width=480)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE", plot.margin = unit(rep(0,4), "cm"))
dev.off()
# Bigger size ?
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3_big.png", height = 800, width=800)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=7) +
theme_void() +
theme(legend.position="FALSE", plot.margin = unit(rep(0,4), "cm"))
dev.off()
png("~/Dropbox/R_GG/R_GRAPH/#315_circle_packing_without_level1.3.png", height = 480, width=480)
ggraph(mygraph, layout = 'circlepack', weight="size") +
geom_node_circle(aes(fill = as.factor(depth), color = as.factor(depth) )) +
scale_fill_manual(values=c("0" = "white", "1" = viridis(4)[1], "2" = viridis(4)[2], "3" = viridis(4)[3], "4"=viridis(4)[4])) +
scale_color_manual( values=c("0" = "white", "1" = "black", "2" = "black", "3" = "black", "4"="black") ) +
geom_node_label( aes(label=new_label), size=4) +
theme_void() +
theme(legend.position="FALSE", plot.margin = unit(rep(0,4), "cm"))
dev.off()
library(ggiraph)
gg <- ggplot(data = dat.gg) +
geom_polygon_interactive(
aes(x, y, group = id, fill = factor(id),
tooltip = bacteria$label[id], data_id = id),
colour = "black",
show.legend = FALSE) +
scale_fill_manual(values = bacteria$colour) +
scale_y_reverse() +
labs(title = "Hover over circle to display taxon name") +
coord_equal()
ggiraph(ggobj = gg, width_svg = 5, height_svg = 5)
install.packages(ggiraph)
install.packages("ggiraph")
library(ggiraph)
gg <- ggplot(data = dat.gg) +
geom_polygon_interactive(
aes(x, y, group = id, fill = factor(id),
tooltip = bacteria$label[id], data_id = id),
colour = "black",
show.legend = FALSE) +
scale_fill_manual(values = bacteria$colour) +
scale_y_reverse() +
labs(title = "Hover over circle to display taxon name") +
coord_equal()
ggiraph(ggobj = gg, width_svg = 5, height_svg = 5)
#
packing <- circleProgressiveLayout(bacteria)
# libraries
library(packcircles)
library(ggplot2)
library(viridis)
library(ggiraph)
packing <- circleProgressiveLayout(bacteria)
dat.gg <- circleLayoutVertices(packing)
gg <- ggplot(data = dat.gg) +
geom_polygon_interactive(
aes(x, y, group = id, fill = factor(id),
tooltip = bacteria$label[id], data_id = id),
colour = "black",
show.legend = FALSE) +
scale_fill_manual(values = bacteria$colour) +
scale_y_reverse() +
labs(title = "Hover over circle to display taxon name") +
coord_equal()
ggiraph(ggobj = gg, width_svg = 5, height_svg = 5)
library(ggiraph)
devtools::install_github('davidgohel/ggiraph')
library(ggiraph)
library(ggiraph)
